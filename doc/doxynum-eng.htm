<html>

<head>
<title>Doxynum</title>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">

</head>

<body>

<h1>Doxynum</h1>

<p>Doxynum is a
program for automatic numbering of sections and drawings, as well as for
creating contents in documentation, generated using the Doxygen software
(www.doxygen.org).</p>

<h2>1. Introduction</h2>

<p>Doxygen is a
powerful tool for the development of documentation. It is used in many projects
for preparation of API descriptions and manuals for programmers. However, it
doesn't have the function of auto numbering of sections and drawings, creating
contents for the sections that are located in different files.</p>

<p>These features are
almost not necessary when preparing API descriptions. However, in many cases it
is convenient to use Doxygen for the creation of electronic documents of other
types, for example, user manuals, descriptions of products and others. It is
associated with ability of Doxygen to support powerful features of formatting
documents, which are well-known among programmers and used in the process of
preparing API descriptions. The use of Doxygen for writing any other project
documentation can make life of developers a little easier in case when the
documentation and code are written by the same people. In this case the auto
numbering of sections and drawings, which currently are not presented in Doxygen,
will be very useful.</p>

<h2>2. Operation
principle</h2>

<p>The usage of the
program consists of two phases: pre-processing and filtering. During the
pre-processing stage the program searches sections and images in source files.
Then it numbers them and writes the numbers in a special file, which is used
during filtration stage.</p>

<p>At the stage of
filtration Doxygen filters the contents of all processed files through Doxynum
program. At the same time the program adds to the text numbers of sections and
drawings from the file received at the first stage. Also, if it was set,
inserts the table of contents, containing the sections titles up to a specified
level of hierarchy.</p>

<h2>3. Tags</h2>

<p>To ensure that the
program is able to find sections and images in text, we use special tags:
#title, #figure. To insert the link with the number of section or drawing into
text, we apply the tag #number. For easier insertion of images into text, use
the tag #image.</p>

<p>The tag is
accompanied by one or more parameters, which are followed in curly brackets and
separated by vertical line, for example,</p>

<p><font face="monospace">#title{main_section|top_section|main_section_ref|Main section}</font></p>

<h3>3.1. Tag #title</h3>

<p>Tag #title is used
to denote the header section. The tag is accompanied by the following
parameters:</p>

<ol>
 <li>The mark of
     section for references to it in tags, for example, in tag #number.</li>
 <li>The mark of the
     parent section (section of an upper level, which includes the current
     section). If described section of upper level of the hierarchy, this
     parameter is left blank.</li>
 <li>The mark, which
     is used in Doxygen's tags \link for the cross-reference to the section.
     Also the tag is used to create a reference to the section in the table of
     contents.</li>
 <li>Name of section
     in the text.</li>
</ol>

<p>When processing text
instead of tag #title Doxynum inserts section number and its name.</p>

<h3>3.2. Tag #figure</h3>

<p>Tag #figure is
used to denote caption. The tag is accompanied by two parameters:</p>

<ol>
 <li>The mark of image for references to it in the tag #number.</li>
 <li>Caption text.</li>
</ol>

<p>When processing
text instead of tag #figure Doxynum inserts figure number and its name.</p>

<h3>3.3. Tag #number</h3>

<p>The tag #number is
used to insert section or drawing number into the text. The tag uses only one
parameter - the section or picture tag. When processing text instead of tag
#number Doxynum inserts number of specified section of drawing.</p>

<h3>3.4. Tag #toc</h3>

<p>Tag #toc is used
to insert in the text a table of contents. This tag uses the only integer
parameter - the number of header levels, which fall into the table of contents.
For example, for tag #toc{2} will be created the contents consisting of two
levels.</p>

<h3>3.5. Tag #image</h3>

<p>Tag #image is used to generate commands for insertion of the specified image in the 
text. The tag is accompanied by two parameters:</p>

<ol>
 <li>Name of the
     image file (supported formats and types of files that are available in
     Doxygen);</li>
 <li>Width of image
     in a percentage of the width of the page. Only used when generating
     documentation in RTF format.</li>
</ol>

<p>Examples of tags
in documentation files can be viewed in the example, which comes with the
software.</p>

<h2>4. Running the program</h2>

<p>During the
pre-processing the program starts from the command line using the following
arguments:</p>

<p><font face="monospace">doxynum -l &lt;file with the list of files to be processed&gt; 
-d &lt;database of sections and drawings&gt;
[-i &lt;list of source files for Doxygen configuration file&gt;]</font></p>

<p>-l &lt;file with
the list of files to be processed&gt; - name of the files, each line of which
contains the name of the source file for pre-processing. Determines the order of
processing files, which influences the numbering of sections (sections, who
came first will receive smaller number).</p>

<p>-d &lt;database of
sections and drawings&gt; - database with numbers of sections and drawings,
gained as the result of pre-processing. Is used during the filtering stage.</p>

<p>-i &lt;list of
source files for Doxygen configuration file&gt; - name of the file, into which
we will write list of source files in a format of INPUT directive of the
configuration file for Doxygen (optional parameter). The text of form
'INPUT=&lt;list of=&quot;&quot; files=&quot;&quot;&gt;' is written to the file.
It can be added to the Doxygen configuration file to specify the list of files
to be processes in the specified order (see how the argument is use in the
example, provided with the program).</p>

<p>In the filtering
mode the program is launched by Doxygen, each time passing it the name of the
source file to be processed. To start the program in this mode, you must add
the the specified line to the Doxygen configuration file (this will tell
Doxygen to use Doxynum as a filter).</p>

<p><font face="monospace">INPUT_FILTER = &quot;doxynum -d &lt;database of sections and drawings&gt; 
[-o &lt;directory for debugging&gt;] -f&quot;</font></p>

<p>-d &lt;database of
sections and drawings&gt; - database with numbers of sections and drawings,
gained as the result of pre-processing stage.</p>

<p>-o &lt;directory
for debugging&gt; - directory, to which saved the results of filtration for
each of the processed files (optional parameter). Can be used for debugging
purposes to view what gets into Doxygen from the output of Doxynum.</p>

<p>Each time you
start the program Doxygen adds the name of the source file to the line,
indicated in the directive INPUT_FILTER. The result of filtration is supplied
to the input of Doxygen. To view the result of filtering for debugging purposes
you can use the argument -o in the Doxynum command prompt.</p>

<p>Sample scripts and
configuration files for Doxygen, used to launch Doxynum, are supplied with the
program.</p>

<h2>5. Installing the software</h2>

<p>The executable
file for Windows can be downloaded at <a href="https://github.com/vasyutin/doxynum/releases">
https://github.com/vasyutin/doxynum/releases</a>. The file is distributed as a ZIP archive,
with the name Doxynum_win_executable_X.X. zip, where X.X is the version number.
Extract the executable file from the archive and put it in the directory that
is listed in your PATH environment variable, to ensure that it can be called
from a command prompt.</p>

<p>Installing the
program in the Linux operating system is made from the source. Download archive
with source code of the program at <a href="https://github.com/vasyutin/doxynum/releases">
https://github.com/vasyutin/doxynum/releases</a>. Unzip the sources in any convenient directory. Then chdir to the
subdirectory project/linux and run the commands</p>

<p><font face="monospace">make<br>make install</font></p>

<p>The last command will require administrator rights.</p>

<h2>6. Software Requirements</h2>

<p>The program has
been tested with the version 1.8.6 of Doxygen.</p>

<h2>7. The author</h2>

<p>Sergey Vasyutin (svpro [at] outlook.com)</p>

</body>
</html>
