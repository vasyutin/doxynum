Doxynum - программа для автоматической нумерации разделов и рисунков, а также создания оглавлений в документации, сгенерированной с использованием ПО doxygen (www.doxygen.org).

1. Введение

Doxygen - это мощное средство для разработки документации. Оно используется во многих проектах для подготовки описаний API и руководств для программистов. Однако в нем отсутствуют возможности автоматической нумерации разделов и рисунков, создания оглавлений для разделов, находящихся в разных файлах.

Эти возможности почти не востребованы при подготовке описаний API. Однако во многих случаях удобно использовать Doxygen для создания электронных документов других типов, например, руководств пользователя, описаний продуктов и пр. Связано это с тем, что Doxygen поддерживает мощные возможности форматирования документов, которые хорошо знакомы программистам и используются ими подготовке описаний API. Применение языка Doxygen также и для написания другой документации по проекту в ситуации, когда документацию и код пишут одни и те же люди, способно немного облегчить жизнь разработчикам. В этом случае возможности по автоматической нумерации разделов и рисунков, которые на текущий момент отсутствуют в Doxygen, будут очень кстати.


2. Принцип работы

Процесс использования программы состоит из двух этапов: предварительная обработка и фильтрация. На этапе предварительной обработки программа ищет в исходных файлах разделы и рисунки. Затем она нумерует их и записывает номера в специальный файл, который используется на этапе фильтрации. 

На этапе фильтрации Doxygen пропускает через программу содержимое всех обрабатываемых файлов. При этом программа добавляет в текст номера разделов и рисунков из файла, полученного на первом этапе. Также, если было задано, вставляется оглавление, содержащее заголовки до заданного уровня иерархии разделов.


3. Тэги

Для того, чтобы программа могла в тексте найти разделы и рисунки, используются специальные теги: #title, #figure. Чтобы вставить в текст ссылку с номером раздела или рисунка, применяется тег #number. Для упрощения вставки в текст изображений используется тег #image.

Тег сопровождается одним или несколькими параметрами, которые следуют за ним в фигурных скобках и разделяются вертикальной чертой, например,

#title{main_section|top_section|main_section_ref|Главный раздел}

3.1. Тег #title

Тег #title служит для обозначения заголовка раздела. Тег сопровождается следующими параметрами:
1) Меткой раздела для ссылок на него в тегах, например, в теге #number.
2) Меткой родительского раздела (раздела более высокого уровня, в который входит текущий раздел). Если описывается раздел верхнего уровня иерархии, то этот параметр остается пустым.
3) Меткой, которая применяется в тегах \link Doxygen для организации перекрестной ссылки на раздел. Также эта метка используется при создании ссылки на раздел в оглавлении;
4) Наименованием раздела в тексте.

При обработке текста вместо тега #title Doxynum вставляет номер раздела и его наименование.

3.2. Тег #figure

Тег #figure используется для обозначения подписи рисунка. Тег сопровождается двумя параметрами:
1) Меткой рисунка для ссылок на него в теге #number.
2) Текстом подписи.

При обработке текста вместо тега #figure Doxynum вставляет номер рисунка и его наименование.

3.3. Тег #number

Тег #number применяется для вставки в текст номера раздела или рисунка. Тег использует единственный параметр - метку раздела или рисунка. При обработке текста вместо тега #number Doxynum вставляет номер указанного раздела или рисунка.

3.4. Тег #toc

Тег #toc применяется для вставки в текст оглавления. Тег использует единственный целочисленный параметр - количество уровней заголовков, которые попадают в оглавление. Например, для тега #toc{2} будет создано оглавление из двух уровней.

3.5. Тег #image

Тег #image используется для генерации команд вставки указанного изображения в текст. Тег сопровождается двумя параметрами:
1) Именем файла с изображением (поддерживаются формате и типы файлов, доступные в Doxygen);
2) Шириной изображения в процентах относительно ширины страницы. Используется только при генерации документации в формате RTF.

Примеры использования тегов в файлах документации можно посмотреть в примере, который поставляется вместе с программой.


4. Запуск программы 

В режиме предварительной обработки программа запускается из командной строки с использованием следующих аргументов:

doxynum -l <файл со списком файлов для обработки> -d <база данных разделов и рисунков>
   [-i <список входных файлов для конфигурационного файла Doxygen>]

-l <файл со списком файлов для обработки> - имя файла, каждая строка которого содержит
   имя входного файла для предварительной обработки. Определяет порядок обработки файлов,
	который влияет на нумерацию разделов (разделы, встретившиеся первыми получат меньший
	номер).
	
-d <база данных разделов и рисунков> - база данных с номерами разделов и рисунков, 
   получаемая в результате предварительной обработки. Используется на этапе фильтрации.
	
-i <список входных файлов для конфигурационного файла Doxygen> - имя файла, в который будет
   записан перечень входных файлов в формате директивы INPUT конфигурационного файла
	Doxygen (опциональный параметр). В файл записывается текст вида 'INPUT=<список файлов>',
	который может быть дописан к конфигурационному файлу Doxygen для указания списка
	обрабатываемых файлов в необходимом порядке (см. вариант использования аргумента в 
	примере, поставляемом вместе с программой).
	
В режиме фильтрации программу запускает Doxygen, каждый раз передавая ей имя входного файла,
который необходимо обработать. Для запуска программы в этом режиме необходимо добавить в конфигурационный файл Doxygen строчку, которая укажет на необходимость использования Doxynum как фильтра:

INPUT_FILTER = "doxynum -d <база данных разделов и рисунков> [-o <каталог для отладки>] -f"

-d <база данных разделов и рисунков> - база данных с номерами разделов и рисунков, 
   полученная в результате предварительной обработки.
	
-o <каталог для отладки> - каталог на диске в который записывается результат фильтрации 
   для каждого из обработанных файлов (необязательный параметр). Может использоваться 
	в целях отладки для просмотра того, что попадает на вход программы Doxygen с выхода Doxynum.
	
При каждом запуске программы Doxygen добавит к строке, указанной в директиве INPUT_FILTER, имя входного файла. Результат фильтрации поступает на вход программы Doxygen. Для просмотра результата фильтрации в отладочных целях можно использовать аргумент -o в командной строке Doxynum. 

Примеры сценариев и конфигурационных файлов Doxygen, используемых для запуска Doxynem, 
поставляются вместе с программой.


5. Установка программы

Исполняемый файл программы для ОС Windows можно загрузить по адресу https://github.com/vasyutin/doxynum/releases. Файл распространяется как архив ZIP, имеющий имя doxynum_win_executable_X.X.zip, где X.X - номер версии исполняемого файла. Извлеките исполняемый файл из архива и запишите его в каталог, указанный в переменной окружения PATH, для того, чтобы его можно было вызывать из командной строки.

Установка программы в ОС Linux производится из исходных текстов. Загрузите архив с исходными текстами программы по адресу https://github.com/vasyutin/doxynum/releases. Разархивируйте исходные тексты в любой удобный каталог. Затем перейдите в подкаталог project/linux и выполните команды

make
make install

Для выполнения последней команды потребуются права администратора.


6. Требования к программному обеспечению

Программа тестировалась с Doxygen версии 1.8.6.


7. Автор

Sergey Vasyutin (svpro [at] outlook.com)